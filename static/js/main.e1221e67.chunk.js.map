{"version":3,"sources":["Timer.js","App.js","reportWebVitals.js","index.js"],"names":["Timer","props","state","time","seconds","width","timer","startTimer","bind","countDown","pauseTimer","secs","divisor_for_minutes","divisor_for_seconds","h","Math","floor","m","s","ceil","this","setInterval","step","onTimeStart","timeLeftVar","parsTime","setState","autostart","onTick","onTimeEnd","clearInterval","onTimePause","className","style","onClick","Component","App","console","log","timeLeft","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAEqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEC,KAAM,GAAIC,QAAS,EAAKH,MAAME,KAAME,MAAO,KAC1D,EAAKC,MAAQ,EACb,EAAKC,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBACjB,EAAKE,WAAa,EAAKA,WAAWF,KAAhB,gBAND,E,qDASVG,GACP,IAEMC,EAAsBD,EAAI,KAG1BE,EAAsBD,EAAsB,GAQlD,MALY,CACVE,EATYC,KAAKC,MAAML,EAAI,MAU3BM,EAPcF,KAAKC,MAAMJ,EAAsB,IAQ/CM,EALcH,KAAKI,KAAKN,M,mCAWtBO,KAAKlB,MAAME,QAAU,IACvBgB,KAAKd,MAAQe,YAAYD,KAAKX,UAA6B,IAAlBW,KAAKnB,MAAMqB,MACpDF,KAAKnB,MAAMsB,YAAYH,KAAKlB,MAAME,Y,0CAKpC,IAAIoB,EAAcJ,KAAKK,SAASL,KAAKlB,MAAME,SAC3CgB,KAAKM,SAAS,CAAEvB,KAAMqB,IAElBJ,KAAKnB,MAAM0B,WACbP,KAAKb,e,kCAKP,IAAIH,EAAUgB,KAAKlB,MAAME,QAAUgB,KAAKnB,MAAMqB,KAC9CF,KAAKM,SAAS,CACZvB,KAAMiB,KAAKK,SAASrB,GACpBA,QAASA,IAGXgB,KAAKM,SAAS,CAAErB,MAAOe,KAAKlB,MAAMG,MAAS,IAAMe,KAAKnB,MAAME,KAAQiB,KAAKnB,MAAMqB,OAC/EF,KAAKnB,MAAM2B,OAAOR,KAAKlB,MAAME,SAEb,IAAZA,IACFgB,KAAKnB,MAAM4B,YACXC,cAAcV,KAAKd,U,mCAKrBc,KAAKnB,MAAM8B,YAAYX,KAAKlB,MAAME,SAClC0B,cAAcV,KAAKd,S,+BAInB,OACE,gCACE,gCACGc,KAAKlB,MAAMC,KAAKW,EADnB,IACuBM,KAAKlB,MAAMC,KAAKc,EADvC,IAC2CG,KAAKlB,MAAMC,KAAKe,KAE3D,qBAAKc,UAAU,UAAUC,MAAO,CAAE5B,MAAM,GAAD,OAAKe,KAAKlB,MAAMG,MAAhB,QACvC,wBAAQ6B,QAASd,KAAKb,WAAtB,mBACA,wBAAQ2B,QAASd,KAAKV,WAAtB,0B,GAxE2ByB,aCiBpBC,MAhBf,WACE,OACE,qBAAKJ,UAAU,MAAf,SACE,cAAC,EAAD,CACE7B,KAAK,KACLwB,WAAW,EACXC,OAAQ,SAACzB,GAAD,OAAUkC,QAAQC,IAAI,0FAAsBnC,IACpDmB,KAAK,IACLO,UAAW,kBAAMQ,QAAQC,IAAI,6DAC7Bf,YAAa,SAACgB,GAAD,OAAcF,QAAQC,IAAI,2FACvCP,YAAa,SAACQ,GAAD,OAAcF,QAAQC,IAAI,2FCDhCE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e1221e67.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Timer extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { time: {}, seconds: this.props.time, width: 100 }\r\n    this.timer = 0\r\n    this.startTimer = this.startTimer.bind(this)\r\n    this.countDown = this.countDown.bind(this)\r\n    this.pauseTimer = this.pauseTimer.bind(this)\r\n  }\r\n\r\n  parsTime(secs) {\r\n    const hours = Math.floor(secs / (60 * 60))\r\n\r\n    const divisor_for_minutes = secs % (60 * 60)\r\n    const minutes = Math.floor(divisor_for_minutes / 60)\r\n\r\n    const divisor_for_seconds = divisor_for_minutes % 60\r\n    const seconds = Math.ceil(divisor_for_seconds)\r\n\r\n    const obj = {\r\n      h: hours,\r\n      m: minutes,\r\n      s: seconds,\r\n    }\r\n    return obj\r\n  }\r\n\r\n  startTimer() {\r\n    if (this.state.seconds > 0) {\r\n      this.timer = setInterval(this.countDown, this.props.step * 1000)\r\n      this.props.onTimeStart(this.state.seconds)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let timeLeftVar = this.parsTime(this.state.seconds)\r\n    this.setState({ time: timeLeftVar })\r\n\r\n    if (this.props.autostart) {\r\n      this.startTimer()\r\n    }\r\n  }\r\n\r\n  countDown() {\r\n    let seconds = this.state.seconds - this.props.step\r\n    this.setState({\r\n      time: this.parsTime(seconds),\r\n      seconds: seconds,\r\n    })\r\n\r\n    this.setState({ width: this.state.width - (100 / this.props.time) * this.props.step })\r\n    this.props.onTick(this.state.seconds)\r\n\r\n    if (seconds === 0) {\r\n      this.props.onTimeEnd()\r\n      clearInterval(this.timer)\r\n    }\r\n  }\r\n\r\n  pauseTimer() {\r\n    this.props.onTimePause(this.state.seconds)\r\n    clearInterval(this.timer)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          {this.state.time.h}:{this.state.time.m}:{this.state.time.s}\r\n        </div>\r\n        <div className=\"loadBar\" style={{ width: `${this.state.width}%` }}></div>\r\n        <button onClick={this.startTimer}>Start</button>\r\n        <button onClick={this.pauseTimer}>Pause</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import './App.css'\nimport Timer from './Timer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Timer\n        time=\"10\"\n        autostart={true}\n        onTick={(time) => console.log('Залишилось часу: ' + time)}\n        step=\"2\"\n        onTimeEnd={() => console.log('Час вийшов!')}\n        onTimeStart={(timeLeft) => console.log('Таймер запущено!')}\n        onTimePause={(timeLeft) => console.log('Таймер на паузі!')}\n      />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}